<script>
async function getAnnouncements(firstTime){
    const announcements = document.getElementById("announcementsWrapper");
    if(!firstTime){
    announcements.textContent = "";
    }
        const response = axios.get("/api/announcements", {
            params: {
                hasPermission: "<%=it.userData.permission_id%>"
            }
        }).then(response => {
        let localAnnouncements = JSON.parse(localStorage.getItem("announcements"));
        let difference = []
        response.data.forEach(x => {
          let match = localAnnouncements.find(y => x.announcement_id == y.announcement_id);
          if(!match) difference.push(x);
        });
        console.log(response, localAnnouncements, difference);
        if(localAnnouncements){
          if(difference.length > 0){
          if(!document.hasFocus()){
            try{
            new Audio("/billing/public/sounds/announcement.wav").play();
            }catch(e){
              e;
            }
          }
          if(![...document.getElementById("announcements").classList].includes("showAnnouncements")){
            const announcementButton = document.getElementById("announcementButton");
            announcementButton.style = "filter: none;";
            announcementButton.addEventListener("click", () => {
              announcementButton.style = "";
            });
          }
          }
        }
        localStorage.setItem("announcements", JSON.stringify(response.data));
        if(response.data.length > 0){
        response.data.forEach((announcement) => {
            const wrapper = document.createElement('div');
            wrapper.classList.add(announcement.announcementType);
            const announcementDate = document.createElement('p');
            announcementDate.innerText = `${dayjs(parseInt(announcement.dateCreated)).toString().split(",")[1].trim().split(" ").slice(0, 3).join(" ")}:`;
            wrapper.appendChild(announcementDate);
            const announcementText = document.createElement('p');
            announcementText.innerText = `${announcement.announcementText}`;
            wrapper.appendChild(announcementText);
            announcements.appendChild(wrapper);
        });
        }else{
            const wrapper = document.createElement('div');
            const announcementText = document.createElement('p');
            announcementText.innerText = "No announcements yet!";
            wrapper.appendChild(announcementText);
            announcements.appendChild(wrapper);
        }
        }).catch(error => {
                    const wrapper = document.createElement('div');
            const announcementText = document.createElement('p');
            announcementText.innerText = "No announcements yet!";
            wrapper.appendChild(announcementText);
            announcements.appendChild(wrapper);
    if (error.response) {
      // Request made and server responded
      console.log(error.response);
    } else if (error.request) {
      // The request was made but no response was received
      console.log(error.request);
    } else {
      // Something happened in setting up the request that triggered an Error
      console.log(error);
    }
    });
}
(async () => {
 getAnnouncements(true);
 setInterval(() => {
    getAnnouncements(false);
}, 60000);
 console.log("%c IF SOMEBODY TOLD YOU TO PASTE ANYTHING HERE, DON'T TRUST THEM AND REPORT THEM TO US. IF YOU PASTE ANYTHING HERE, YOU RISK YOUR ACCOUNT'S SAFETY.", 'background-color: yellow;font-size:2rem;color:black;')
    setInterval(() => {
    console.log("%c IF SOMEBODY TOLD YOU TO PASTE ANYTHING HERE, DON'T TRUST THEM AND REPORT THEM TO US. IF YOU PASTE ANYTHING HERE, YOU RISK YOUR ACCOUNT'S SAFETY.", 'background-color: yellow;font-size:2rem;color:black;'); //Kinda an announcement
    }, 120000);
 })();
</script>